# Generated by Django 4.2.19 on 2025-08-31 21:52

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Username', max_length=150, unique=True)),
                ('email', models.EmailField(help_text='Email address', max_length=254, unique=True)),
                ('is_completed', models.BooleanField(default=False, help_text='User profile is completed')),
                ('age', models.PositiveIntegerField(blank=True, help_text='User age', null=True)),
                ('profile_photo', models.ImageField(blank=True, help_text='Profile photo', null=True, upload_to='profile_photos/')),
                ('bio', models.TextField(blank=True, help_text='User bio', max_length=500)),
                ('city', models.CharField(blank=True, help_text='City', max_length=100)),
                ('state', models.CharField(blank=True, help_text='State', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude', max_digits=9, null=True)),
                ('hashtags', models.JSONField(blank=True, default=list, help_text='User interest hashtags')),
                ('otp', models.CharField(blank=True, help_text='Hashed OTP', max_length=128, null=True)),
                ('otp_metadata', models.CharField(blank=True, help_text='created_at:validations_attempts:resend_attempts', max_length=50, null=True)),
                ('is_otp_verified', models.BooleanField(default=False, help_text='OTP is verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
